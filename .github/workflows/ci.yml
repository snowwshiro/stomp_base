name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.4']
        rails-version: ['8.0']
    
    name: Ruby ${{ matrix.ruby-version }} - Rails ${{ matrix.rails-version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
        cache-version: ${{ github.run_id }}
    
    - name: Install dependencies
      run: |
        bundle config set --local deployment false
        bundle config set --local frozen false
        bundle install
        cd spec/rails_demo
        bundle install
    
    - name: Run stomp_base unit tests
      run: |
        bundle exec rspec spec/lib spec/unit
      env:
        RAILS_ENV: test
    
    - name: Run Rails demo tests
      run: |
        cd spec/rails_demo
        bundle exec rspec
      env:
        RAILS_ENV: test
    
    - name: Run component tests (if exists)
      run: |
        cd spec/rails_demo
        if [ -f "bin/lookbook" ]; then
          bundle exec lookbook preview --no-open &
          sleep 5
          pkill -f lookbook
        fi
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [rubocop, bundle-audit, reek]
    
    name: Code Quality - ${{ matrix.job }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true
        cache-version: ${{ github.run_id }}-${{ matrix.job }}
    
    - name: Bundle install
      run: bundle install
    
    - name: Run RuboCop
      if: matrix.job == 'rubocop'
      run: bundle exec rubocop --format github
      continue-on-error: true
    
    # Bundle Audit job
    - name: Run bundle-audit
      if: matrix.job == 'bundle-audit'
      run: |
        bundle exec bundle-audit update
        bundle exec bundle-audit check
    
    # Reek job
    - name: Run Reek
      if: matrix.job == 'reek'
      run: bundle exec reek --format json lib/ > reek-results.json || true
    
    - name: Upload Reek results
      if: matrix.job == 'reek'
      uses: actions/upload-artifact@v4
      with:
        name: reek-results
        path: reek-results.json

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true
        cache-version: ${{ github.run_id }}
    
    - name: Run Brakeman security scan
      run: |
        bundle exec brakeman --format json --output brakeman-results.json
      continue-on-error: true
    
    - name: Upload Brakeman results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: brakeman-results
        path: brakeman-results.json

  gem-build:
    runs-on: ubuntu-latest
    needs: [test, code-quality, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true
        cache-version: ${{ github.run_id }}
    
    - name: Build gem
      run: |
        gem build stomp_base.gemspec
    
    - name: Upload gem artifact
      uses: actions/upload-artifact@v4
      with:
        name: stomp_base-gem
        path: "*.gem"
